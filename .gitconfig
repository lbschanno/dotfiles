[user]
    name = Laura Schanno
    email = lbschanno@gmail.com
[color]
    # Enable colors in color-supporting terminals.
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
    upstream = cyan
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[alias]
    #List available aliases.
    aliases = !git config --get-regexp alias | sed -re 's/alias\\.(\\S*)\\s(.*)$/\\1 = \\2/g'
    # Command shortcuts
    c = commit
    co = checkout
    coall = checkout -- .
    cob = checkout -b
    s = status
    b = branch
    a = add
    aa = add -A
    amend = commit --amend
    f = fetch -p
    # Display oneline log.
    ls = log --date=relative --oneline
    # Display tree-like log.
    lg = log --graph --date=relative --pretty=tformat:'%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%an %ad)%Creset'
    # Update last commit with staged files without editing message.
    oops = commit --amend --no-edit
    # Edit the last commit message.
    reword = commit --amend
    # Undo last commit but keep changed files in stage.
    uncommit = reset --soft HEAD~1
    # Remove file(s) from Git but not from disk.
    untrack = rm --cache --
    # List local commits that weren't pushed yet.
    review-local = "!git lg @{push}"
    # Use fzf to support selecting files to add from commandline.
    ffa = "!git ls-files -m -o --exclude-standard | fzf --print0 -m | xargs -0 -t -o git add"
[core]
    autocrlf = input
    editor = vim
[diff]
    # Use better, descriptive initials (c, i, w) instead of a/b.
    mnemonicPrefix = true
    # Show renames/moves as such.
    renames = true
    # Set the diff tool.
    tool = meld
[difftool]
    prompt = false
[difftool "meld"]
    cmd = meld "$LOCAL" "$REMOTE"
[log]
    # Use abbreviated SHAs whenever possible instead of full 40 chars.
    abbrevCommit = true
[push]
    # Always push to upstream.
    default = current 
[pull]
    # Rebase when pulling.
    rebase = true
[tag]
    # Sort tags.
    sort = version:refname
